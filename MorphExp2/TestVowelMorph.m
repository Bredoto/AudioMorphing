function [spec,smooth]=TestVowelMorph(v1, v2, method);%function image=TestVowelMorph(v1, v2, method);if nargin < 3	method = 1;endlen = 0.5;sr = 22050;pitch = 200;specLength = 300;s1 = MakeVowel(len*sr, pitch, sr, v1);s2 = MakeVowel(len*sr, pitch, sr, v2);% Calculate the MFCC (smooth and pitch) spectrograms for first utterance[s1Mfcc,s1Spect,s1Fb, s1Fbrecon, s1Smooth] = mfcc26(s1, sr, sr/64);s1Spect = abs(s1Spect(:,size(s1Spect,2)));s1Smooth = s1Smooth(:,size(s1Smooth,2));s1PitchSpect = s1Spect ./ s1Smooth;% Calculate the MFCC (smooth and pitch) spectrograms for second utterance[s2Mfcc,s2Spect,s2Fb, s2Fbrecon, s2Smooth] = mfcc26(s2, sr, sr/64);s2Spect = abs(s2Spect(:,size(s2Spect,2)));s2Smooth = s2Smooth(:,size(s2Smooth,2));s2PitchSpect = s2Spect ./ s2Smooth;s1Smooth = s1Smooth / max(s1Smooth);s2Smooth = s2Smooth / max(s2Smooth);if method == 2	[error,path1,path2] = dtw4(s1Smooth', s2Smooth');	subplot(3,2,1); plot(s1Smooth); title('s1Smooth');	subplot(3,2,2); plot(s1Smooth); title('s1Smooth');		subplot(3,2,3); plot(s2Smooth(path1));title('s2 warped to look like s1')'	subplot(3,2,4); plot(s1Smooth(path2));title('s1 warped to look like s2');		subplot(3,2,5); plot(s2Smooth); title('s2Smooth');	subplot(3,2,6); plot(s2Smooth); title('s2Smooth');	drawnow;endsmooth = zeros(size(s1Smooth,1),specLength);spec = smooth;for i=1:specLength	lambda = (i-1)/(specLength-1);		if method == 1		newSmoothSpec = (1-lambda)*s1Smooth + lambda*s2Smooth;	else		[index1,index2] = TimeWarpPaths(path1, path2, lambda);		newSmoothSpec = (1-lambda)*s1Smooth(index1) + lambda*s2Smooth(index2);	end			spec(:,i) = s1PitchSpect .* newSmoothSpec;	smooth(:,i) = newSmoothSpec;	endend		